#include<stdio.h>
#include<stdlib.h>

typedef struct node
{
	struct node *next;
	int data;
}node;

typedef struct head
{
	node *start;
}head;

void insert(head *t,int ele)
{
	node *p,*q=t->start;
	p=(node*)malloc(sizeof(node));
	p->data=ele;
	p->next=NULL;
	if(t->start==NULL)
	{
		t->start=p;
	}
	else if(t->start->next==NULL)
	{
		if(ele>t->start->data)
		{
			p->next=t->start;
			t->start=p;
		}
		else
		{
			t->start->next=p;
		}
	}
	else
	{
		while(q->next!=NULL)
		{
			if(ele>q->next->data)
				break;
			else
				q=q->next;
		}
		if(q->next==NULL)
		{
			q->next=p;
		}
		else
		{
			p->next=q->next;
			q->next=p;
		}
	}
}

int delete1(head *t)
{
	node *p=t->start;
	if(t->start==NULL)
	{
		printf("Queue Underflow\n");
		return -1;
	}
	t->start=t->start->next;
	return p->data;
}

void display(head *t)
{
	node *i,*q=t->start;
	if(t->start==NULL)
	{
		printf("Queue is empty\n");
		return;
	}
	for(i=t->start;i!=NULL;i=i->next)
	{
		printf("%d  ",i->data);
	}
	printf("\n");
}

void main()
{
	int ch,ele;
	head x;
	x.start=NULL;
	while(1)
	{
		printf("Enter your choice\n");
		printf("1:Insert 2:Delete 3:Display 4:Exit\n");
		scanf("%d",&ch);
		if(ch==4)
			break;
		switch(ch)
		{
			case 1:printf("Enter the element to be inserted\n");
				   scanf("%d",&ele);
				   insert(&x,ele);
				   display(&x);
				   break;

			case 2:if(x.start==NULL)
				   {
				   		printf("Queue Underflow\n");
				   }
				   else
				   {
				   		ele=delete1(&x);
				   		printf("Deleted element = %d\n",ele);
				   		display(&x);
				   }
				   break;
				   
			case 3:if(x.start==NULL)
				   {
				   		printf("Queue is Empty\n");
				   }
				   else
				   {
				   		display(&x);
				   }
				   break;
			default:printf("Invalid choice\n");
		}
	}
}
